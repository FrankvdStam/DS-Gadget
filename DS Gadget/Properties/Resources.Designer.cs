//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DS_Gadget.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DS_Gadget.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 10000 1 false 5 Catarina Helm
        ///11000 1 false 5 Catarina Armor
        ///12000 1 false 5 Catarina Gauntlets
        ///13000 1 false 5 Catarina Leggings
        ///20000 1 false 5 Paladin Helm
        ///21000 1 false 5 Paladin Armor
        ///22000 1 false 5 Paladin Gauntlets
        ///23000 1 false 5 Paladin Leggings
        ///40000 1 false 5 Dark Mask
        ///41000 1 false 5 Dark Armor
        ///42000 1 false 5 Dark Gauntlets
        ///43000 1 false 5 Dark Leggings
        ///50000 1 false 10 Brigand Hood
        ///51000 1 false 10 Brigand Armor
        ///52000 1 false 10 Brigand Gauntlets
        ///53000 1 false 10 Brigand Trouse [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Armor {
            get {
                return ResourceManager.GetString("Armor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -1 [None]
        ///1002900 Depths (Entrance)
        ///1002950 Depths (Gaping Dragon&apos;s Room)
        ///1002960 Depths (Bonfire)
        ///1012960 Undead Burg (Pre-Dragon Scare)
        ///1012961 Undead Parish (Sunlight Altar Bonfire)
        ///1012962 Undead Burg (Bonfire)
        ///1012964 Undead Parish (Bonfire)
        ///1012965 Undead Parish (Near Boar)
        ///1012966 Undead Parish (Near Cell)
        ///1020980 Firelink Shrine (Bonfire, repeat)
        ///1022960 Firelink Shrine (Bonfire)
        ///1102511 Painted World of Ariamis (Rope Bridge)
        ///1102960 Painted World of Ariamis (Bonfire)
        ///1102961 Painted W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Bonfires {
            get {
                return ResourceManager.GetString("Bonfires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mov esi, [137D790]
        ///mov edi, 1
        ///push edi
        ///call D76390
        ///ret.
        /// </summary>
        internal static string BonfireWarp {
            get {
                return ResourceManager.GetString("BonfireWarp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 4 11 08 12 13 13 11 09 09 Warrior
        ///1 5 14 10 10 11 11 10 09 11 Knight
        ///2 3 10 11 10 10 14 12 11 08 Wanderer
        ///3 5 09 11 09 09 15 10 12 11 Thief
        ///4 4 12 08 14 14 09 11 08 10 Bandit
        ///5 4 11 09 11 12 14 11 09 09 Hunter
        ///6 3 08 15 08 09 11 08 15 08 Sorcerer
        ///7 1 10 12 11 12 09 12 10 08 Pyromancer
        ///8 2 11 11 09 12 08 11 08 14 Cleric
        ///9 6 11 11 11 11 11 11 11 11 Deprived.
        /// </summary>
        internal static string Classes {
            get {
                return ResourceManager.GetString("Classes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 109 99 false 0 Eye of Death
        ///111 99 false 0 Cracked Red Eye Orb
        ///230 99 false 0 Elizabeth&apos;s Mushroom
        ///240 99 false 0 Divine Blessing
        ///260 99 false 0 Green Blossom
        ///270 99 false 0 Bloodred Moss Clump
        ///271 99 false 0 Purple Moss Clump
        ///272 99 false 0 Blooming Purple Moss Clump
        ///274 99 false 0 Purging Stone
        ///275 99 false 0 Egg Vermifuge
        ///280 99 false 0 Repair Powder
        ///290 99 false 0 Throwing Knife
        ///291 99 false 0 Poison Throwing Knife
        ///292 99 false 0 Firebomb
        ///293 99 false 0 Dung Pie
        ///294 99 false 0 Alluring Sk [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Consumables {
            get {
                return ResourceManager.GetString("Consumables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mov ebp, {0:X}
        ///mov ebx, {1:X}
        ///mov ecx, FFFFFFFF
        ///mov edx, {2:X}
        ///mov eax, [{3:X}]
        ///mov [eax + 828], ebp
        ///mov [eax + 82C], ebx
        ///mov [eax + 830], ecx
        ///mov [eax + 834], edx
        ///mov eax, [{4:X}]
        ///push eax
        ///call {5:X}
        ///ret.
        /// </summary>
        internal static string ItemDrop {
            get {
                return ResourceManager.GetString("ItemDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 376 1 false 0 Pendant
        ///384 1 false 0 Peculiar Doll
        ///2001 1 false 0 Basement Key
        ///2002 1 false 0 Crest of Artorias
        ///2003 1 false 0 Cage Key
        ///2004 1 false 0 Archive Tower Cell Key
        ///2005 1 false 0 Archive Tower Giant Door Key
        ///2006 1 false 0 Archive Tower Giant Cell Key
        ///2007 1 false 0 Blighttown Key
        ///2008 1 false 0 Key to New Londo Ruins
        ///2009 1 false 0 Annex Key
        ///2010 1 false 0 Dungeon Cell Key
        ///2011 1 false 0 Big Pilgrim&apos;s Key
        ///2012 1 false 0 Undead Asylum F2 East Key
        ///2013 1 false 0 Key to the Seal
        ///2014 1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KeyItems {
            get {
                return ResourceManager.GetString("KeyItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mov eax, {0:X}
        ///mov ecx, {0:X}
        ///call {1:X}
        ///ret.
        /// </summary>
        internal static string LevelUp {
            get {
                return ResourceManager.GetString("LevelUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100000 1 true 0 Dagger
        ///101000 1 true 0 Parrying Dagger
        ///102000 1 false 5 Ghost Blade
        ///103000 1 true 0 Bandit&apos;s Knife
        ///104000 1 false 5 Priscilla&apos;s Dagger
        ///200000 1 true 0 Shortsword
        ///201000 1 true 0 Longsword
        ///202000 1 true 0 Broadsword
        ///203000 1 true 0 Broken Straight Sword
        ///204000 1 true 0 Balder Side Sword
        ///205000 1 false 5 Crystal Straight Sword
        ///206000 1 true 0 Sunlight Straight Sword
        ///207000 1 true 0 Barbed Straight Sword
        ///208000 1 false 5 Silver Knight Straight Sword
        ///209000 1 false 5 Astora&apos;s Strai [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MeleeWeapons {
            get {
                return ResourceManager.GetString("MeleeWeapons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 1 false 0 1
        ///1000 1 false 0 Shaved
        ///1100 1 false 0 Receding
        ///1200 1 false 0 Short
        ///1300 1 false 0 Swept Back
        ///1400 1 false 0 Ponytail
        ///1500 1 false 0 Wild
        ///1600 1 false 0 Parted Center
        ///1700 1 false 0 Semi-Long
        ///1800 1 false 0 Curly
        ///1900 1 false 0 Bobbed
        ///2000 1 false 0 Male 11
        ///2100 1 false 0 Male 12
        ///2200 1 false 0 Male 13
        ///2300 1 false 0 Male 14
        ///2400 1 false 0 Male 15
        ///2500 1 false 0 Male 16
        ///2600 1 false 0 Male 17
        ///2700 1 false 0 Male 18
        ///2800 1 false 0 Male 19
        ///2900 1 false 0 Male 20
        ///3000 1 false  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MysteryArmor {
            get {
                return ResourceManager.GetString("MysteryArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 116 1 false 0 Black Eye Orb (Shiva)
        ///200 1 false 0 Estus Flask (Empty)
        ///201 1 false 0 Estus Flask
        ///202 1 false 0 Estus Flask+1 (Empty)
        ///203 1 false 0 Estus Flask+1
        ///204 1 false 0 Estus Flask+2 (Empty)
        ///205 1 false 0 Estus Flask+2
        ///206 1 false 0 Estus Flask+3 (Empty)
        ///207 1 false 0 Estus Flask+3
        ///208 1 false 0 Estus Flask+4 (Empty)
        ///209 1 false 0 Estus Flask+4
        ///210 1 false 0 Estus Flask+5 (Empty)
        ///211 1 false 0 Estus Flask+5
        ///212 1 false 0 Estus Flask+6 (Empty)
        ///213 1 false 0 Estus Flask+6
        ///214 1 false 0 Est [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MysteryGoods {
            get {
                return ResourceManager.GetString("MysteryGoods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 199000 1 false 0 Ghost Dagger
        ///299000 1 false 0 Ghost Sword
        ///308000 1 false 5 Great Lord Greatsword
        ///398000 1 false 0 Ghost Greatsword
        ///399000 1 false 0 Ghost Ultra Greatsword
        ///454001 1 false 0 454001
        ///454002 1 false 0 454002
        ///454003 1 false 0 454003
        ///454004 1 false 0 454004
        ///454005 1 false 0 454005
        ///498000 1 false 0 Ghost Curved Sword
        ///499000 1 false 0 Ghost Curved Greatsword
        ///599000 1 false 0 Ghost Katana
        ///699000 1 false 0 Ghost Rapier
        ///798000 1 false 0 Ghost Axe
        ///799000 1 false 0 Ghost Greataxe
        ///898000 1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MysteryWeapons {
            get {
                return ResourceManager.GetString("MysteryWeapons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1202000 1 true 0 Black Bow of Pharis
        ///1204000 1 true 0 Composite Bow
        ///1205000 1 false 5 Darkmoon Bow
        ///1203000 1 false 5 Dragonslayer Greatbow
        ///1201000 1 true 0 Longbow
        ///1200000 1 true 0 Short Bow
        ///9021000 1 false 5 Gough&apos;s Greatbow
        ///
        ///1252000 1 true 0 Avelyn
        ///1251000 1 true 0 Heavy Crossbow
        ///1250000 1 true 0 Light Crossbow
        ///1253000 1 true 0 Sniper Crossbow
        ///
        ///2002000 999 false 0 Feather Arrow
        ///2003000 999 false 0 Fire Arrow
        ///2001000 999 false 0 Large Arrow
        ///2000000 999 false 0 Standard Arrow
        ///2004000 999 fa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RangedWeapons {
            get {
                return ResourceManager.GetString("RangedWeapons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 1 false 0 Havel&apos;s Ring
        ///101 1 false 0 Red Tearstone Ring
        ///102 1 false 0 Darkmoon Blade Covenant Ring
        ///103 1 false 0 Cat Covenant Ring
        ///104 1 false 0 Cloranthy Ring
        ///105 1 false 0 Flame Stoneplate Ring
        ///106 1 false 0 Thunder Stoneplate Ring
        ///107 1 false 0 Spell Stoneplate Ring
        ///108 1 false 0 Speckled Stoneplate Ring
        ///109 1 false 0 Bloodbite Ring
        ///110 1 false 0 Poisonbite Ring
        ///111 1 false 0 Tiny Being&apos;s Ring
        ///113 1 false 0 Cursebite Ring
        ///114 1 false 0 White Seance Ring
        ///115 1 false 0 Bellowing Dragoncre [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Rings {
            get {
                return ResourceManager.GetString("Rings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1396000 1 false 0 Skull Lantern
        ///1400000 1 true 0 East-West Shield
        ///1401000 1 true 0 Wooden Shield
        ///1402000 1 true 0 Large Leather Shield
        ///1403000 1 true 0 Small Leather Shield
        ///1404000 1 true 0 Target Shield
        ///1405000 1 true 0 Buckler
        ///1406000 1 true 0 Cracked Round Shield
        ///1408000 1 true 0 Leather Shield
        ///1409000 1 true 0 Plank Shield
        ///1410000 1 true 0 Caduceus Round Shield
        ///1411000 1 false 5 Crystal Ring Shield
        ///1450000 1 true 0 Heater Shield
        ///1451000 1 true 0 Knight Shield
        ///1452000 1 true 0 Tower Kite Sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Shields {
            get {
                return ResourceManager.GetString("Shields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3000 99 false 0 Sorcery: Soul Arrow
        ///3010 99 false 0 Sorcery: Great Soul Arrow
        ///3020 99 false 0 Sorcery: Heavy Soul Arrow
        ///3030 99 false 0 Sorcery: Great Heavy Soul Arrow
        ///3040 99 false 0 Sorcery: Homing Soulmass
        ///3050 99 false 0 Sorcery: Homing Crystal Soulmass
        ///3060 99 false 0 Sorcery: Soul Spear
        ///3070 99 false 0 Sorcery: Crystal Soul Spear
        ///3100 99 false 0 Sorcery: Magic Weapon
        ///3110 99 false 0 Sorcery: Great Magic Weapon
        ///3120 99 false 0 Sorcery: Crystal Magic Weapon
        ///3300 99 false 0 Sorcery: Magic Shie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Spells {
            get {
                return ResourceManager.GetString("Spells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1300000 1 false 0 Sorcerer&apos;s Catalyst
        ///1301000 1 false 0 Beatrice&apos;s Catalyst
        ///1302000 1 false 0 Tin Banishment Catalyst
        ///1303000 1 false 0 Logan&apos;s Catalyst
        ///1304000 1 false 0 Tin Darkmoon Catalyst
        ///1305000 1 false 0 Oolacile Ivory Catalyst
        ///1306000 1 false 0 Tin Crystallization Catalyst
        ///1307000 1 false 0 Demon&apos;s Catalyst
        ///1308000 1 false 0 Izalith Catalyst
        ///9017000 1 false 0 Manus Catalyst
        ///9018000 1 false 0 Oolacile Catalyst
        ///
        ///1330000 1 false 0 Pyromancy Flame
        ///1332000 1 false 0 Pyromancy Flame (Ascended [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpellTools {
            get {
                return ResourceManager.GetString("SpellTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 800 1 false 0 Large Ember
        ///801 1 false 0 Very Large Ember
        ///802 1 false 0 Crystal Ember
        ///806 1 false 0 Large Magic Ember
        ///807 1 false 0 Enchanted Ember
        ///808 1 false 0 Divine Ember
        ///809 1 false 0 Large Divine Ember
        ///810 1 false 0 Dark Ember
        ///812 1 false 0 Large Flame Ember
        ///813 1 false 0 Chaos Flame Ember
        ///1000 99 false 0 Titanite Shard
        ///1010 99 false 0 Large Titanite Shard
        ///1020 99 false 0 Green Titanite Shard
        ///1030 99 false 0 Titanite Chunk
        ///1040 99 false 0 Blue Titanite Chunk
        ///1050 99 false 0 White Titanit [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeMaterials {
            get {
                return ResourceManager.GetString("UpgradeMaterials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 1 false 0 White Sign Soapstone
        ///101 1 false 0 Red Sign Soapstone
        ///102 1 false 0 Red Eye Orb
        ///103 1 false 0 Black Separation Crystal
        ///106 1 false 0 Orange Guidance Soapstone
        ///108 1 false 0 Book of the Guilty
        ///112 1 false 0 Servant Roster
        ///113 1 false 0 Blue Eye Orb
        ///114 1 false 0 Dragon Eye
        ///115 1 false 0 Black Eye Orb (Lautrec)
        ///117 1 false 0 Darksign
        ///118 1 false 0 Purple Coward&apos;s Crystal
        ///220 1 false 0 Silver Pendant
        ///371 1 false 0 Binoculars
        ///377 1 false 0 Dragon Head Stone
        ///378 1 false 0 Dragon Tors [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsableItems {
            get {
                return ResourceManager.GetString("UsableItems", resourceCulture);
            }
        }
    }
}
